(module
  (start $main)
  (func $main (export "main")
    (call $assert_eq_i64 (call $fac (i64.const 1)) (i64.const 1))
    (call $assert_eq_i64 (call $fac (i64.const 2)) (i64.const 2))
    (call $assert_eq_i64 (call $fac (i64.const 3)) (i64.const 6))
    (call $assert_eq_i64 (call $fac (i64.const 4)) (i64.const 24))
    (call $assert_eq_i64 (call $fac (i64.const 8)) (i64.const 40320))
    (call $assert_eq_i64 (call $fac (i64.const 9)) (i64.const 362880))
    (call $assert_eq_i64 (call $fac (i64.const 10)) (i64.const 3628800))
    (call $assert_eq_i64 (call $fac (i64.const 12)) (i64.const 479001600))
    (call $assert_eq_i64 (call $fac (i64.const 18)) (i64.const 6402373705728000))
  )
  (func $assert_eq_i64 (param i64 i64)
    (if
      (i64.ne (local.get 0) (local.get 1))
      (then unreachable)
    )
  )
  ;; Iterative factorial without locals.
  (func $pick0 (param i64) (result i64 i64)
    (local.get 0) (local.get 0)
  )
  (func $pick1 (param i64 i64) (result i64 i64 i64)
    (local.get 0) (local.get 1) (local.get 0)
  )
  (func $fac (param i64) (result i64)
    (i64.const 1) (local.get 0)
    (loop $l (param i64 i64) (result i64)
      (call $pick1) (call $pick1) (i64.mul)
      (call $pick1) (i64.const 1) (i64.sub)
      (call $pick0) (i64.const 0) (i64.gt_u)
      (br_if $l)
      (drop) (return)
    )
  )
)
